// ‚úÖ src/utils/common/ScrollToTop.tsx
"use client";

import { useEffect } from "react";
import { useLocation } from "react-router-dom";

interface ScrollToTopProps {
  /** ‡∏ñ‡πâ‡∏≤ true ‡∏à‡∏∞ scroll ‡πÅ‡∏ö‡∏ö smooth, ‡∏ñ‡πâ‡∏≤ false ‡∏à‡∏∞ scroll ‡πÅ‡∏ö‡∏ö‡∏ó‡∏±‡∏ô‡∏ó‡∏µ */
  smooth?: boolean;
  /** offset ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö scroll (‡πÄ‡∏ä‡πà‡∏ô header sticky) */
  offset?: number;
}

/**
 * üîù ScrollToTop
 *
 * - ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï Scroll ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏î‡πâ‡∏≤‡∏ô‡∏ö‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠ pathname ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô
 * - ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ hash (#) ‡∏à‡∏∞‡πÑ‡∏°‡πà reset ‚Üí ‡∏õ‡∏•‡πà‡∏≠‡∏¢‡πÉ‡∏´‡πâ browser scroll ‡πÑ‡∏õ anchor ‡πÄ‡∏≠‡∏á
 * - ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö smooth scroll ‡πÅ‡∏•‡∏∞ offset ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö header
 * - ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô `<App />` ‡∏´‡∏£‡∏∑‡∏≠ layout wrapper
 */
const ScrollToTop = ({ smooth = true, offset = 0 }: ScrollToTopProps): null => {
  const { pathname, hash } = useLocation();

  useEffect(() => {
    if (typeof window === "undefined") return;

    // ‚ùå ‡πÑ‡∏°‡πà scroll ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ hash (anchor link)
    if (hash) return;

    window.scrollTo({
      top: 0 - offset,
      behavior: smooth ? "smooth" : "auto",
    });
  }, [pathname, hash, smooth, offset]);

  return null;
};

export default ScrollToTop;
